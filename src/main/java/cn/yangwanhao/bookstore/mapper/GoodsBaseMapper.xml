<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yangwanhao.bookstore.mapper.GoodsBaseMapper" >
  <resultMap id="BaseResultMap" type="cn.yangwanhao.bookstore.entity.GoodsBase" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="goods_status" property="goodsStatus" jdbcType="INTEGER" />
    <result column="price" property="price" jdbcType="BIGINT" />
    <result column="stock" property="stock" jdbcType="INTEGER" />
    <result column="category" property="category" jdbcType="INTEGER" />
    <result column="goods_version" property="goodsVersion" jdbcType="BIGINT" />
    <result column="goods_buy_version" property="goodsBuyVersion" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, goods_status, price, stock, category, goods_version, goods_buy_version, create_time, 
    create_user_id, update_time, update_user_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.yangwanhao.bookstore.entity.GoodsBaseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from goods_base
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from goods_base
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from goods_base
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="cn.yangwanhao.bookstore.entity.GoodsBaseExample" >
    delete from goods_base
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.yangwanhao.bookstore.entity.GoodsBase" >
    insert into goods_base (id, goods_status, price, 
      stock, category, goods_version, 
      goods_buy_version, create_time, create_user_id, 
      update_time, update_user_id)
    values (#{id,jdbcType=BIGINT}, #{goodsStatus,jdbcType=INTEGER}, #{price,jdbcType=BIGINT}, 
      #{stock,jdbcType=INTEGER}, #{category,jdbcType=INTEGER}, #{goodsVersion,jdbcType=BIGINT}, 
      #{goodsBuyVersion,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="cn.yangwanhao.bookstore.entity.GoodsBase" >
    insert into goods_base
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="goodsStatus != null" >
        goods_status,
      </if>
      <if test="price != null" >
        price,
      </if>
      <if test="stock != null" >
        stock,
      </if>
      <if test="category != null" >
        category,
      </if>
      <if test="goodsVersion != null" >
        goods_version,
      </if>
      <if test="goodsBuyVersion != null" >
        goods_buy_version,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="goodsStatus != null" >
        #{goodsStatus,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        #{price,jdbcType=BIGINT},
      </if>
      <if test="stock != null" >
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="category != null" >
        #{category,jdbcType=INTEGER},
      </if>
      <if test="goodsVersion != null" >
        #{goodsVersion,jdbcType=BIGINT},
      </if>
      <if test="goodsBuyVersion != null" >
        #{goodsBuyVersion,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.yangwanhao.bookstore.entity.GoodsBaseExample" resultType="java.lang.Integer" >
    select count(*) from goods_base
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update goods_base
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.goodsStatus != null" >
        goods_status = #{record.goodsStatus,jdbcType=INTEGER},
      </if>
      <if test="record.price != null" >
        price = #{record.price,jdbcType=BIGINT},
      </if>
      <if test="record.stock != null" >
        stock = #{record.stock,jdbcType=INTEGER},
      </if>
      <if test="record.category != null" >
        category = #{record.category,jdbcType=INTEGER},
      </if>
      <if test="record.goodsVersion != null" >
        goods_version = #{record.goodsVersion,jdbcType=BIGINT},
      </if>
      <if test="record.goodsBuyVersion != null" >
        goods_buy_version = #{record.goodsBuyVersion,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update goods_base
    set id = #{record.id,jdbcType=BIGINT},
      goods_status = #{record.goodsStatus,jdbcType=INTEGER},
      price = #{record.price,jdbcType=BIGINT},
      stock = #{record.stock,jdbcType=INTEGER},
      category = #{record.category,jdbcType=INTEGER},
      goods_version = #{record.goodsVersion,jdbcType=BIGINT},
      goods_buy_version = #{record.goodsBuyVersion,jdbcType=BIGINT},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{record.updateUserId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="cn.yangwanhao.bookstore.entity.GoodsBase" >
    update goods_base
    <set >
      <if test="goodsStatus != null" >
        goods_status = #{goodsStatus,jdbcType=INTEGER},
      </if>
      <if test="price != null" >
        price = #{price,jdbcType=BIGINT},
      </if>
      <if test="stock != null" >
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="category != null" >
        category = #{category,jdbcType=INTEGER},
      </if>
      <if test="goodsVersion != null" >
        goods_version = #{goodsVersion,jdbcType=BIGINT},
      </if>
      <if test="goodsBuyVersion != null" >
        goods_buy_version = #{goodsBuyVersion,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.yangwanhao.bookstore.entity.GoodsBase" >
    update goods_base
    set goods_status = #{goodsStatus,jdbcType=INTEGER},
      price = #{price,jdbcType=BIGINT},
      stock = #{stock,jdbcType=INTEGER},
      category = #{category,jdbcType=INTEGER},
      goods_version = #{goodsVersion,jdbcType=BIGINT},
      goods_buy_version = #{goodsBuyVersion,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>