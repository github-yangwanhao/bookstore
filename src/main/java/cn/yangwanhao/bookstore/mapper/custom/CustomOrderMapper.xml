<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.yangwanhao.bookstore.mapper.custom.CustomOrderMapper" >
  <resultMap id="BaseResultMap" type="cn.yangwanhao.bookstore.entity.Order" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="address_id" property="addressId" jdbcType="BIGINT" />
    <result column="total_price" property="totalPrice" jdbcType="BIGINT" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="is_deleted" property="isDeleted" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="shipments_time" property="shipmentsTime" jdbcType="TIMESTAMP" />
    <result column="complete_time" property="completeTime" jdbcType="TIMESTAMP" />
  </resultMap>

  <insert id="insertOrderBaseGenerateId" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO `order`
    (order_no, user_id, address_id, total_price, order_status, is_deleted, create_time)
    VALUES
    (#{orderNo}, #{userId}, #{addressId} #{totalPrice}, #{orderStatus}, #{isDeleted}, #{createTime})
  </insert>

  <resultMap id="orderVoResultMap" type="cn.yangwanhao.bookstore.vo.OrderVo">
    <result column="id" property="orderId" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="total_price" property="totalPrice" jdbcType="BIGINT" />
    <association property="address" javaType="cn.yangwanhao.bookstore.vo.CustomerAddressListVo">
      <result column="addressId" property="id" jdbcType="BIGINT" />
      <result column="customerId" property="customerId" jdbcType="BIGINT" />
      <result column="receiverName" property="receiverName" jdbcType="BIGINT" />
      <result column="receiverPhone" property="receiverPhone" jdbcType="BIGINT" />
      <result column="receiverAddress" property="receiverAddress" jdbcType="BIGINT" />
    </association>
    <collection property="goodsList" ofType="cn.yangwanhao.bookstore.vo.OrderGoodsListVo">
      <result column="goodsId" property="goodsId" jdbcType="BIGINT" />
      <result column="img" property="img" jdbcType="VARCHAR" />
      <result column="goodsTitle" property="goodsTitle" jdbcType="VARCHAR" />
      <result column="price" property="price" jdbcType="BIGINT" />
      <result column="goodsNum" property="goodsNum" jdbcType="INTEGER" />
    </collection>
  </resultMap>
  <select id="getOrderDetail" resultMap="orderVoResultMap">
    SELECT
    o.id AS id, o.order_no AS order_no, o.order_status AS order_status, o.create_time AS create_time, o.address_id AS addressId, o.total_price AS total_price,
    ca.customer_id AS customerId, ca.receiver_name AS receiverName, ca.receiver_phone AS receiverPhone, ca.receiver_address AS receiverAddress,
    og.goods_id AS goodsId, og.goods_num, og.goods_price AS price, og.goods_num AS goodsNum,
    gi.imgs AS img, gi.title AS goodsTitle
    FROM `order` o
    LEFT JOIN order_goods og ON og.order_id=o.id
    LEFT JOIN goods_info gi ON og.goods_id=gi.id
    LEFT JOIN customer_address ca ON ca.id=o.address_id
    WHERE o.order_no=#{orderNo} AND o.user_id=#{loginUserId}
  </select>

  <resultMap id="orderListVoResultMap" type="cn.yangwanhao.bookstore.vo.OrderListVo">
    <result column="id" property="orderId" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="total_price" property="totalPrice" jdbcType="BIGINT" />
    <result column="address" property="address" jdbcType="BIGINT" />
    <collection property="goods" select="portalListOrderGoods" column="id" />
  </resultMap>
  <select id="portalListOrder" resultMap="orderListVoResultMap">
    SELECT
    id, order_no, order_status, create_time, total_price
    FROM `order`
    WHERE user_id=#{loginUserId}
    ORDER BY create_time DESC
  </select>

  <select id="portalListOrderGoods" resultType="cn.yangwanhao.bookstore.vo.OrderGoodsListVo">
    SELECT
    og.goods_id AS goodsId, og.goods_num AS goodsNum,
    gi.imgs AS img, gi.title AS goodsTitle,
    gb.price AS price
    FROM order_goods og
    LEFT JOIN goods_base gb ON og.goods_id=gb.id
    LEFT JOIN goods_info gi ON og.goods_id=gi.id
    WHERE og.order_id=#{id}
  </select>

  <select id="adminListOrder" resultType="cn.yangwanhao.bookstore.vo.OrderListVo">
    SELECT
    o.id AS orderId, o.order_no AS orderNo, o.order_status AS orderStatus, o.create_time AS createTime, o.total_price AS totalPrice,
    CONCAT(ca.receiver_name, "-",ca.receiver_phone, "-", ca.receiver_address) AS address
    FROM `order` o
    LEFT JOIN customer_address ca ON ca.id=o.address_id
    ORDER BY create_time ASC
  </select>

  <select id="listOrderGoods" resultType="cn.yangwanhao.bookstore.vo.OrderGoodsListVo">
    SELECT
    og.goods_num AS goodsNum, gi.title AS goodsTitle, og.goods_id AS goodsId
    FROM `order` o
    LEFT JOIN order_goods og ON og.order_id=o.id
    LEFT JOIN goods_info gi ON gi.id=og.goods_id
    WHERE o.order_no=#{orderNo}
  </select>

  <select id="selectOrders" resultMap="BaseResultMap">
    SELECT *
    FROM `order`
    WHERE id IN
    <foreach collection="ids" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </select>

  <update id="startOrder">
    UPDATE `order`
    SET order_status=6, shipments_time=now()
    WHERE id IN
    <foreach collection="ids" item="id" open="(" close=")" separator=",">
      #{id}
    </foreach>
  </update>

</mapper>